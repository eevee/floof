### Pyramid configuration for floof
# Developers: run as
#     paster serve --reload -n dev pyramid.ini
# or just use bin/dev-server.sh.  If you want to customize, see
# custom-example.ini for how to do that without angering the git gods.
# Items that should (or must) vary per machine are marked CHANGEME

[server:main]
use = egg:Paste#http
# CHANGEME: This may be publicly accessible!  For production, use gunicorn and
# comment these out.
host = 0.0.0.0
port = 6543

################################################################################
### Production configuration
[app:floof-prod]
use = egg:floof#pyramid

# Pyramid built-ins
default_locale_name = en

# Mako: http://docs.pylonsproject.org/projects/pyramid/1.1/narr/environment.html#mako-template-renderer-settings
mako.directories = floof:templates
mako.strict_undefined = true

# SQLAlchemy
# CHANGEME in production
sqlalchemy.url = sqlite:///%(here)s/floof.db

# Beaker sessions: http://beaker.groovie.org/configuration.html
# CHANGEME in production, preferably to ext:database
session.type = file
session.data_dir = %(here)s/data/sessions/data
session.lock_dir = %(here)s/data/sessions/lock
session.key = floof
# CHANGEME
session.secret = somesecret
session.httponly = true
session.secure = true
# (two weeks)
session.timeout = 1209600

### floof-specific
# Site title, appears in <title> and elsewhere
site_title = squiggle
# Generated thumbnails will be this size
thumbnail_size = 160
# How wide a range should ratings have?
rating_radius = 1

# Storage for uploaded files, either 'local' or 'mogilefs'
filestore = local
filestore.directory = %(here)s/floof/public/files
;filestore = mogilefs
;filestore.trackers = localhost:7001
;filestore.domain = floof

### floof authentication
# The expiry time, in seconds, for OpenID authentications for most users.
auth_confidence_expiry_seconds = 600
# The expiry time, in seconds, for OpenID authentications for users with
# a restrictive Authentication Method option and who are currently
# authenticating with a certificate.
cert_auth_confidence_expiry_seconds = 1800

# Allow authenticating with client certificates.
# This may be dangerous if you don't understand the particulars, but
# the UI presently assumes that it is always "true".
# See: http://bugs.veekun.com/projects/floof/wiki/Client_Certificates
client_cert_auth = true

# Determines where to look for the client certificate serial passed from the
# frontend HTTPS server.
# May be: 'http_headers'
client_cert_transport = http_headers

# Required in a 'X-Floof-Secret' HTTP header for certificate authentication
# via HTTP headers to work.
# During normal operation, this provides no actual security benefit, but
# it provides some fallback securty should access to the raw HTTP application
# accidently become publically attainable.
# CHANGEME
client_cert_http_secret = lalala

# Where to generate and keep the CA and CRL for SSL client certificate
# authentication.
client_cert_dir = %(here)s/certs


################################################################################
### Development configuration
[app:floof-dev]
use = floof-prod

# Pyramid debugging; these are useful defaults
reload_templates = true
debug_authorization = false
debug_notfound = true
debug_routematch = false
debug_templates = true

# floof-specific debugging: shows a sidebar with useful dev information
super_debug = true


################################################################################
### Testing configuration
[app:floof-test]
use = floof-dev
sqlalchemy.url = sqlite://


################################################################################
### App pipeline
[filter:paste-prefix]
# This isn't actually used for prefixing, but it makes the app aware of the
# scheme (i.e., https).
use = egg:PasteDeploy#prefix

[filter:weberror-prod]
use = egg:WebError#error_catcher
debug = false
# CHANGEME
;error_log = 
;show_exceptions_in_wsgi_errors = true
;smtp_server = localhost
;error_email = janitor@example.com
;smtp_username = janitor
;smtp_password = "janitor's password"
;from_address = paste@localhost
;error_subject_prefix = "Pyramid Error"
;smtp_use_tls =
;error_message =

[filter:weberror-dev]
use = egg:WebError#evalerror

[filter:tm]
# That is, "transaction manager"
use = egg:repoze.tm2#tm
commit_veto = repoze.tm:default_commit_veto

[pipeline:main]
pipeline = paste-prefix weberror-prod tm floof-prod

[pipeline:dev]
pipeline = paste-prefix weberror-dev tm floof-dev


### Logging
# CHANGEME you may want to redirect or filter this logging
[loggers]
keys = root, floof, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_floof]
level = WARN
handlers =
qualname = floof

[logger_sqlalchemy]
level = WARN
handlers = console
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
