#
# floof - Pylons configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
debug = true
email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5000

[app:main]
use = egg:floof
full_stack = true
static_files = true

cache_dir = %(here)s/data
beaker.session.key = floof
beaker.session.secret = ${app_instance_secret}
app_instance_uuid = ${app_instance_uuid}

site_title = floof

# Filestore module to load, and its configuration
filestore = local
filestore.directory = %(here)s/floof/public/files
filestore.url_prefix = /files

# Size for a thumbnail, in pixels
thumbnail_size = 160

# Allowed rating radius (i.e. 'radius = 1' allows ratings in the closed
# interval [-1,1])
rating_radius = 1

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

# SQLAlchemy database URL
sqlalchemy.url = sqlite:///production.db

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
set debug = false

# Custom debugging overlay that won't give the public arbitrary code execution
# powers, but will slow the whole thing down and laden them with a bunch of
# debug crap.
#super_debug = true

# Enable client certificate authentication for users.
# This may be dangerous if you don't understand the particulars.
# See <FIXME:URL> for more information before enabling this.
#client_cert_auth = true

# Where to generate and keep the CA and CRL for SSL client certificate
# authentication.  If you comment this out, you'll have to set up the
# CA manually.
client_cert_dir = %(here)s/certs

# Logging configuration
[loggers]
keys = root, floof

[handlers]
keys = console, floofdb, flooffile

[formatters]
keys = generic, flooffile


[logger_root]
level = INFO
handlers = console

[logger_floof]
level = DEBUG
handlers = floofdb
qualname = floof


[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_floofdb]
class = floof.lib.log.FloofDBHandler
args = ()
level = ADMIN

[handler_flooffile]
class = floof.lib.log.FloofFileHandler
args = ('floof.log',)
level = DEBUG
formatter = flooffile


[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s

[formatter_flooffile]
format = %(asctime)s %(levelname)-5.5s %(levelno)s [%(name)s] %(ipaddr)s %(username)s "%(message)s"
